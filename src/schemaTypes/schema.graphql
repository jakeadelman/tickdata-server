type Query {
  hello(name: String): String!
  quote(
    timestamp: String
    hour: String
    symbol: String
    bidSize: Int
    bidPrice: Float
    askPrice: Float
    askSize: Int
  ): [Quote]

  tick(
    timestamp: String
    hour: String
    symbol: String
    side: String
    size: Int
    price: Float
    tickDirection: String
    trdMatchID: String
  ): [Tick]
}

type Mutation {
  register(email: String!, password: String!): Boolean

  newquote(
    timestamp: String!
    hour: String!
    symbol: String!
    bidSize: Int!
    bidPrice: Float!
    askPrice: Float!
    askSize: Int!
  ): Boolean

  newtick(
    timestamp: String!
    hour: String!
    symbol: String!
    side: String!
    size: Int!
    price: Float!
    tickDirection: String!
    trdMatchID: String!
  ): Boolean

  # neworderbook(symbol: String!, orderbooklevelarr: [OrderBookLevel!]!): Boolean
  # neworderbooklevel(
  #   symbol: String!
  #   side: String!
  #   price: Float
  #   timestamp: String
  # ): Boolean
}

type Quote {
  timestamp: String!
  symbol: String!
  bidSize: Int!
  bidPrice: Float!
  askPrice: Float!
  askSize: Int!
}

type Tick {
  timestamp: String!
  hour: String!
  symbol: String!
  side: String!
  size: Int!
  price: Float!
  tickDirection: String!
  trdMatchID: String!
}

# type OrderBook {
#   id: ID!
#   symbol: String!
#   orderbooklevels: [OrderBookLevel!]!
# }

# type OrderBookLevel {
#   symbol: String
#   side: String
#   size: Int
#   price: Float
#   timestamp: String
# }
